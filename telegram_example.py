#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

import asyncio
import os
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from telegram_notifications import TradingNotifier

async def example_trading_session():
    """–ü—Ä–∏–º–µ—Ä —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"""
    
    print("üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–ú–ï–†–ê –¢–û–†–ì–û–í–û–ô –°–ï–°–°–ò–ò")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª—è—Ç–µ–ª—å
    notifier = TradingNotifier()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Å–µ—Å—Å–∏—é
    print("\nüìä –ù–∞—á–∞–ª–æ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏...")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–µ—Å—Å–∏–∏
    await notifier.notify_alert(
        alert_type="INFO",
        title="–ù–∞—á–∞–ª–æ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏",
        message="–¢–æ—Ä–≥–æ–≤–∞—è —Å–µ—Å—Å–∏—è –Ω–∞—á–∞–ª–∞—Å—å. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.",
        severity="INFO"
    )
    
    await asyncio.sleep(2)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–¥–µ–ª–æ–∫
    trades = [
        {"symbol": "GAZP", "action": "BUY", "quantity": 100, "price": 150.50, "strategy": "ARIMA", "confidence": 0.85},
        {"symbol": "SBER", "action": "BUY", "quantity": 50, "price": 300.20, "strategy": "LSTM", "confidence": 0.78},
        {"symbol": "GAZP", "action": "SELL", "quantity": 100, "price": 152.30, "strategy": "ARIMA", "pnl": 180.0, "reason": "TAKE_PROFIT"},
        {"symbol": "PIKK", "action": "BUY", "quantity": 30, "price": 500.00, "strategy": "SARIMA", "confidence": 0.72},
        {"symbol": "SBER", "action": "SELL", "quantity": 50, "price": 295.80, "strategy": "LSTM", "pnl": -220.0, "reason": "STOP_LOSS"},
    ]
    
    for i, trade in enumerate(trades, 1):
        print(f"\nüìà –°–¥–µ–ª–∫–∞ {i}: {trade['action']} {trade['symbol']}")
        
        await notifier.notify_trade(
            symbol=trade["symbol"],
            action=trade["action"],
            quantity=trade["quantity"],
            price=trade["price"],
            strategy=trade["strategy"],
            pnl=trade.get("pnl"),
            reason=trade.get("reason"),
            confidence=trade.get("confidence")
        )
        
        await asyncio.sleep(1)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
    print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
    await notifier.notify_portfolio_update(
        total_value=102500,
        total_pnl=2500,
        positions_count=2,
        daily_pnl=-40.0
    )
    
    await asyncio.sleep(2)
    
    # –ê–ª–µ—Ä—Ç –æ —Ä–∏—Å–∫–µ
    print("\n‚ö†Ô∏è –ê–ª–µ—Ä—Ç –æ —Ä–∏—Å–∫–µ...")
    await notifier.notify_alert(
        alert_type="RISK",
        title="–í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å",
        message="–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞ —Ä—ã–Ω–∫–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–Ω–∏–∑–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –ø–æ–∑–∏—Ü–∏–π.",
        severity="MEDIUM"
    )
    
    await asyncio.sleep(2)
    
    # –î–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞
    print("\nüìà –î–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞...")
    await notifier.send_daily_summary()
    
    print("\n‚úÖ –¢–æ—Ä–≥–æ–≤–∞—è —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

async def example_portfolio_monitoring():
    """–ü—Ä–∏–º–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    
    print("\nüìä –ü–†–ò–ú–ï–† –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ü–û–†–¢–§–ï–õ–Ø")
    print("=" * 40)
    
    notifier = TradingNotifier()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è
    portfolio_updates = [
        {"value": 100000, "pnl": 0, "positions": 0, "daily_pnl": 0},
        {"value": 100500, "pnl": 500, "positions": 1, "daily_pnl": 500},
        {"value": 101200, "pnl": 1200, "positions": 2, "daily_pnl": 1200},
        {"value": 100800, "pnl": 800, "positions": 2, "daily_pnl": 800},
        {"value": 102000, "pnl": 2000, "positions": 3, "daily_pnl": 2000},
    ]
    
    for i, update in enumerate(portfolio_updates, 1):
        print(f"\nüìà –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {i}: {update['value']:,.0f}‚ÇΩ (P&L: {update['pnl']:+,.0f}‚ÇΩ)")
        
        await notifier.notify_portfolio_update(
            total_value=update["value"],
            total_pnl=update["pnl"],
            positions_count=update["positions"],
            daily_pnl=update["daily_pnl"]
        )
        
        await asyncio.sleep(1)
    
    print("\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω!")

async def example_risk_alerts():
    """–ü—Ä–∏–º–µ—Ä –∞–ª–µ—Ä—Ç–æ–≤ –æ —Ä–∏—Å–∫–∞—Ö"""
    
    print("\n‚ö†Ô∏è –ü–†–ò–ú–ï–† –ê–õ–ï–†–¢–û–í –û –†–ò–°–ö–ê–•")
    print("=" * 35)
    
    notifier = TradingNotifier()
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∞–ª–µ—Ä—Ç–æ–≤
    alerts = [
        {
            "type": "RISK",
            "title": "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Ä–∏—Å–∫–∞",
            "message": "–¢–µ–∫—É—â–∏–π —Ä–∏—Å–∫ –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 15%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫—Ä—ã—Ç—å —á–∞—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π.",
            "severity": "HIGH"
        },
        {
            "type": "PERFORMANCE",
            "title": "–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏",
            "message": "–ü–æ—Ä—Ç—Ñ–µ–ª—å –¥–æ—Å—Ç–∏–≥ –º–µ—Å—è—á–Ω–æ–π —Ü–µ–ª–∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ 5%. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø—Ä–∏–±—ã–ª–∏.",
            "severity": "MEDIUM"
        },
        {
            "type": "ERROR",
            "title": "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API",
            "message": "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ T-Bank API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Ç–æ–∫–µ–Ω—ã.",
            "severity": "CRITICAL"
        },
        {
            "type": "INFO",
            "title": "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏",
            "message": "–¢–æ—Ä–≥–æ–≤–∞—è —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã. –î–Ω–µ–≤–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: +2.1%",
            "severity": "INFO"
        }
    ]
    
    for i, alert in enumerate(alerts, 1):
        print(f"\nüö® –ê–ª–µ—Ä—Ç {i}: {alert['title']}")
        
        await notifier.notify_alert(
            alert_type=alert["type"],
            title=alert["title"],
            message=alert["message"],
            severity=alert["severity"]
        )
        
        await asyncio.sleep(1)
    
    print("\n‚úÖ –ê–ª–µ—Ä—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('TELEGRAM_CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("üìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   TELEGRAM_BOT_TOKEN=your_bot_token")
        print("   TELEGRAM_CHAT_ID=your_chat_id")
        return
    
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    await example_trading_session()
    await example_portfolio_monitoring()
    await example_risk_alerts()
    
    print("\nüéâ –í–°–ï –ü–†–ò–ú–ï–†–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

if __name__ == "__main__":
    asyncio.run(main())

